   1               		.file	"uart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	init_uart0
  14               	init_uart0:
  15               	.LFB11:
  16               		.file 1 "dependencies/hal/xmega/uart.c"
   1:dependencies/hal/xmega/uart.c **** #include "uart.h"
   2:dependencies/hal/xmega/uart.c **** 
   3:dependencies/hal/xmega/uart.c **** /*! Define that selects the Usart used in example. */
   4:dependencies/hal/xmega/uart.c **** #define USART USARTC0
   5:dependencies/hal/xmega/uart.c **** 
   6:dependencies/hal/xmega/uart.c **** #define TIMEOUT 0
   7:dependencies/hal/xmega/uart.c **** #define BYTE_REC 1
   8:dependencies/hal/xmega/uart.c **** 
   9:dependencies/hal/xmega/uart.c **** void												init_uart0
  10:dependencies/hal/xmega/uart.c **** 	(
  11:dependencies/hal/xmega/uart.c ****    void
  12:dependencies/hal/xmega/uart.c ****    )
  13:dependencies/hal/xmega/uart.c ****    {
  17               		.loc 1 13 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  14:dependencies/hal/xmega/uart.c **** /* This PORT setting is only valid to USARTC0 if other USARTs is used a
  15:dependencies/hal/xmega/uart.c **** 	 * different PORT and/or pins is used. */
  16:dependencies/hal/xmega/uart.c **** 	/* PIN3 (TXD0) as output. */
  17:dependencies/hal/xmega/uart.c **** 	PORTC.DIRSET = PIN3_bm;
  23               		.loc 1 17 0
  24 0000 E0E4      		ldi r30,lo8(64)
  25 0002 F6E0      		ldi r31,lo8(6)
  26 0004 88E0      		ldi r24,lo8(8)
  27 0006 8183      		std Z+1,r24
  18:dependencies/hal/xmega/uart.c **** 
  19:dependencies/hal/xmega/uart.c **** 	/* PC2 (RXD0) as input. */
  20:dependencies/hal/xmega/uart.c **** 	PORTC.DIRCLR = PIN2_bm;
  28               		.loc 1 20 0
  29 0008 84E0      		ldi r24,lo8(4)
  30 000a 8283      		std Z+2,r24
  21:dependencies/hal/xmega/uart.c **** 
  22:dependencies/hal/xmega/uart.c **** 	/* USARTC0, 8 Data bits, No Parity, 1 Stop bit. */
  23:dependencies/hal/xmega/uart.c **** 	USART_Format_Set(&USART, USART_CHSIZE_8BIT_gc, USART_PMODE_DISABLED_gc, false);
  31               		.loc 1 23 0
  32 000c E0EA      		ldi r30,lo8(-96)
  33 000e F8E0      		ldi r31,lo8(8)
  34 0010 83E0      		ldi r24,lo8(3)
  35 0012 8583      		std Z+5,r24
  24:dependencies/hal/xmega/uart.c **** 
  25:dependencies/hal/xmega/uart.c **** 	/* Set Baudrate to 9600 bps:
  26:dependencies/hal/xmega/uart.c **** 	 * Use the default I/O clock fequency that is 2 MHz.
  27:dependencies/hal/xmega/uart.c **** 	 * Do not use the baudrate scale factor
  28:dependencies/hal/xmega/uart.c **** 	 *
  29:dependencies/hal/xmega/uart.c **** 	 * Baudrate select = (1/(16*(((I/O clock frequency)/Baudrate)-1)
  30:dependencies/hal/xmega/uart.c **** 	 *                 = 12
  31:dependencies/hal/xmega/uart.c **** 	 */
  32:dependencies/hal/xmega/uart.c **** 	#if SS_VER==SS_VER_2_0
  33:dependencies/hal/xmega/uart.c **** 	USART_Baudrate_Set(&USART, 1, 0);
  34:dependencies/hal/xmega/uart.c **** 	#else
  35:dependencies/hal/xmega/uart.c **** 	USART_Baudrate_Set(&USART, 11, 0);
  36               		.loc 1 35 0
  37 0014 8BE0      		ldi r24,lo8(11)
  38 0016 8683      		std Z+6,r24
  39 0018 1782      		std Z+7,__zero_reg__
  36:dependencies/hal/xmega/uart.c **** 	#endif
  37:dependencies/hal/xmega/uart.c **** 
  38:dependencies/hal/xmega/uart.c **** 	/* Enable both RX and TX. */
  39:dependencies/hal/xmega/uart.c **** 	USART_Rx_Enable(&USART);
  40               		.loc 1 39 0
  41 001a 8481      		ldd r24,Z+4
  42 001c 8061      		ori r24,lo8(16)
  43 001e 8483      		std Z+4,r24
  40:dependencies/hal/xmega/uart.c **** 	USART_Tx_Enable(&USART);
  44               		.loc 1 40 0
  45 0020 8481      		ldd r24,Z+4
  46 0022 8860      		ori r24,lo8(8)
  47 0024 8483      		std Z+4,r24
  48               	/* epilogue start */
  41:dependencies/hal/xmega/uart.c ****    }
  49               		.loc 1 41 0
  50 0026 0895      		ret
  51               		.cfi_endproc
  52               	.LFE11:
  54               	.global	input_ch_w_timeout_0
  56               	input_ch_w_timeout_0:
  57               	.LFB12:
  42:dependencies/hal/xmega/uart.c **** 
  43:dependencies/hal/xmega/uart.c **** unsigned char									input_ch_w_timeout_0
  44:dependencies/hal/xmega/uart.c **** 	(
  45:dependencies/hal/xmega/uart.c ****    char *					 	data,
  46:dependencies/hal/xmega/uart.c ****    volatile unsigned int				timeout
  47:dependencies/hal/xmega/uart.c ****    )
  48:dependencies/hal/xmega/uart.c ****    {
  58               		.loc 1 48 0
  59               		.cfi_startproc
  60               	.LVL0:
  61 0028 CF93      		push r28
  62               	.LCFI0:
  63               		.cfi_def_cfa_offset 4
  64               		.cfi_offset 28, -3
  65 002a DF93      		push r29
  66               	.LCFI1:
  67               		.cfi_def_cfa_offset 5
  68               		.cfi_offset 29, -4
  69 002c 1F92      		push __zero_reg__
  70 002e 1F92      		push __zero_reg__
  71               	.LCFI2:
  72               		.cfi_def_cfa_offset 7
  73 0030 CDB7      		in r28,__SP_L__
  74 0032 DEB7      		in r29,__SP_H__
  75               	.LCFI3:
  76               		.cfi_def_cfa_register 28
  77               	/* prologue: function */
  78               	/* frame size = 2 */
  79               	/* stack size = 4 */
  80               	.L__stack_usage = 4
  81 0034 6983      		std Y+1,r22
  82 0036 7A83      		std Y+2,r23
  83               	.LVL1:
  49:dependencies/hal/xmega/uart.c ****    unsigned int				timeout_counter = 0;
  84               		.loc 1 49 0
  85 0038 30E0      		ldi r19,0
  86 003a 20E0      		ldi r18,0
  87               	.LVL2:
  88               	.L3:
  50:dependencies/hal/xmega/uart.c **** 
  51:dependencies/hal/xmega/uart.c ****    
  52:dependencies/hal/xmega/uart.c ****    //check if a byte has been recieved or if the timeout has been excedded
  53:dependencies/hal/xmega/uart.c ****    while (timeout_counter != timeout)
  89               		.loc 1 53 0
  90 003c 4981      		ldd r20,Y+1
  91 003e 5A81      		ldd r21,Y+2
  92 0040 4217      		cp r20,r18
  93 0042 5307      		cpc r21,r19
  94 0044 01F4      		brne .L6
  54:dependencies/hal/xmega/uart.c **** 		{	
  55:dependencies/hal/xmega/uart.c **** 		if (USART_IsRXComplete(&USART))
  56:dependencies/hal/xmega/uart.c **** 			{
  57:dependencies/hal/xmega/uart.c **** 			*data = USART_GetChar(&USART);
  58:dependencies/hal/xmega/uart.c **** 			return BYTE_REC;
  59:dependencies/hal/xmega/uart.c **** 			}
  60:dependencies/hal/xmega/uart.c **** 		timeout_counter++;
  61:dependencies/hal/xmega/uart.c **** 		}
  62:dependencies/hal/xmega/uart.c **** 		
  63:dependencies/hal/xmega/uart.c **** 	return TIMEOUT;
  95               		.loc 1 63 0
  96 0046 80E0      		ldi r24,0
  97               	.LVL3:
  98 0048 00C0      		rjmp .L2
  99               	.LVL4:
 100               	.L6:
  55:dependencies/hal/xmega/uart.c **** 			{
 101               		.loc 1 55 0
 102 004a 4091 A108 		lds r20,2209
 103 004e 47FF      		sbrs r20,7
 104 0050 00C0      		rjmp .L4
  57:dependencies/hal/xmega/uart.c **** 			return BYTE_REC;
 105               		.loc 1 57 0
 106 0052 2091 A008 		lds r18,2208
 107               	.LVL5:
 108 0056 FC01      		movw r30,r24
 109 0058 2083      		st Z,r18
  58:dependencies/hal/xmega/uart.c **** 			}
 110               		.loc 1 58 0
 111 005a 81E0      		ldi r24,lo8(1)
 112               	.LVL6:
 113               	.L2:
 114               	/* epilogue start */
  64:dependencies/hal/xmega/uart.c **** 	}
 115               		.loc 1 64 0
 116 005c 0F90      		pop __tmp_reg__
 117 005e 0F90      		pop __tmp_reg__
 118 0060 DF91      		pop r29
 119 0062 CF91      		pop r28
 120 0064 0895      		ret
 121               	.LVL7:
 122               	.L4:
  60:dependencies/hal/xmega/uart.c **** 		}
 123               		.loc 1 60 0
 124 0066 2F5F      		subi r18,-1
 125 0068 3F4F      		sbci r19,-1
 126               	.LVL8:
 127 006a 00C0      		rjmp .L3
 128               		.cfi_endproc
 129               	.LFE12:
 131               	.global	input_ch_0
 133               	input_ch_0:
 134               	.LFB13:
  65:dependencies/hal/xmega/uart.c **** 		
  66:dependencies/hal/xmega/uart.c **** char												input_ch_0
  67:dependencies/hal/xmega/uart.c **** 	(
  68:dependencies/hal/xmega/uart.c ****    void
  69:dependencies/hal/xmega/uart.c ****    )
  70:dependencies/hal/xmega/uart.c ****    {
 135               		.loc 1 70 0
 136               		.cfi_startproc
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 0 */
 140               	.L__stack_usage = 0
 141               	.L8:
  71:dependencies/hal/xmega/uart.c ****    //check if a byte has been recieved or if the timeout has been excedded
  72:dependencies/hal/xmega/uart.c ****    while (!USART_IsRXComplete(&USART))
 142               		.loc 1 72 0
 143 006c 8091 A108 		lds r24,2209
 144 0070 87FF      		sbrs r24,7
 145 0072 00C0      		rjmp .L8
  73:dependencies/hal/xmega/uart.c **** 		{
  74:dependencies/hal/xmega/uart.c **** 		continue;		
  75:dependencies/hal/xmega/uart.c **** 		}		
  76:dependencies/hal/xmega/uart.c **** 	return USART_GetChar(&USART);;
 146               		.loc 1 76 0
 147 0074 8091 A008 		lds r24,2208
 148               	/* epilogue start */
  77:dependencies/hal/xmega/uart.c **** 	}
 149               		.loc 1 77 0
 150 0078 0895      		ret
 151               		.cfi_endproc
 152               	.LFE13:
 154               	.global	output_ch_0
 156               	output_ch_0:
 157               	.LFB14:
  78:dependencies/hal/xmega/uart.c **** 	
  79:dependencies/hal/xmega/uart.c **** void												output_ch_0
  80:dependencies/hal/xmega/uart.c **** 	(
  81:dependencies/hal/xmega/uart.c **** 	char							data
  82:dependencies/hal/xmega/uart.c **** 	)
  83:dependencies/hal/xmega/uart.c **** 	{
 158               		.loc 1 83 0
 159               		.cfi_startproc
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
 164               	.LVL9:
 165               	.L11:
  84:dependencies/hal/xmega/uart.c **** 	while(!USART_IsTXDataRegisterEmpty(&USART));
 166               		.loc 1 84 0 discriminator 1
 167 007a 9091 A108 		lds r25,2209
 168 007e 95FF      		sbrs r25,5
 169 0080 00C0      		rjmp .L11
  85:dependencies/hal/xmega/uart.c **** 	USART_PutChar(&USART, data);
 170               		.loc 1 85 0
 171 0082 8093 A008 		sts 2208,r24
 172               	/* epilogue start */
  86:dependencies/hal/xmega/uart.c **** 	return;
  87:dependencies/hal/xmega/uart.c **** 	}...
 173               		.loc 1 87 0
 174 0086 0895      		ret
 175               		.cfi_endproc
 176               	.LFE14:
 178               	.Letext0:
 179               		.file 2 "/usr/lib/avr/include/stdint.h"
 180               		.file 3 "/usr/lib/gcc/avr/7.3.0/include/stddef.h"
 181               		.file 4 "/usr/lib/avr/include/stdlib.h"
 182               		.file 5 "/usr/lib/avr/include/avr/iox128d3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart.c
     /tmp/ccZ3iAQF.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZ3iAQF.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZ3iAQF.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZ3iAQF.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccZ3iAQF.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccZ3iAQF.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZ3iAQF.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZ3iAQF.s:14     .text:0000000000000000 init_uart0
     /tmp/ccZ3iAQF.s:56     .text:0000000000000028 input_ch_w_timeout_0
     /tmp/ccZ3iAQF.s:133    .text:000000000000006c input_ch_0
     /tmp/ccZ3iAQF.s:156    .text:000000000000007a output_ch_0

NO UNDEFINED SYMBOLS
