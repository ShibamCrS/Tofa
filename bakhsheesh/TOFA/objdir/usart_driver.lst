   1               		.file	"usart_driver.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	USART_InterruptDriver_Initialize
  14               	USART_InterruptDriver_Initialize:
  15               	.LFB11:
  16               		.file 1 "dependencies/hal/xmega/usart_driver.c"
   1:dependencies/hal/xmega/usart_driver.c **** /* This file has been prepared for Doxygen automatic documentation generation.*/
   2:dependencies/hal/xmega/usart_driver.c **** /*! \file *********************************************************************
   3:dependencies/hal/xmega/usart_driver.c ****  *
   4:dependencies/hal/xmega/usart_driver.c ****  * \brief
   5:dependencies/hal/xmega/usart_driver.c ****  *      XMEGA USART driver source file.
   6:dependencies/hal/xmega/usart_driver.c ****  *
   7:dependencies/hal/xmega/usart_driver.c ****  *      This file contains the function implementations the XMEGA interrupt
   8:dependencies/hal/xmega/usart_driver.c ****  *      and polled USART driver.
   9:dependencies/hal/xmega/usart_driver.c ****  *
  10:dependencies/hal/xmega/usart_driver.c ****  *      The driver is not intended for size and/or speed critical code, since
  11:dependencies/hal/xmega/usart_driver.c ****  *      most functions are just a few lines of code, and the function call
  12:dependencies/hal/xmega/usart_driver.c ****  *      overhead would decrease code performance. The driver is intended for
  13:dependencies/hal/xmega/usart_driver.c ****  *      rapid prototyping and documentation purposes for getting started with
  14:dependencies/hal/xmega/usart_driver.c ****  *      the XMEGA ADC module.
  15:dependencies/hal/xmega/usart_driver.c ****  *
  16:dependencies/hal/xmega/usart_driver.c ****  *      For size and/or speed critical code, it is recommended to copy the
  17:dependencies/hal/xmega/usart_driver.c ****  *      function contents directly into your application instead of making
  18:dependencies/hal/xmega/usart_driver.c ****  *      a function call.
  19:dependencies/hal/xmega/usart_driver.c ****  *
  20:dependencies/hal/xmega/usart_driver.c ****  *      Some functions use the following construct:
  21:dependencies/hal/xmega/usart_driver.c ****  *          "some_register = ... | (some_parameter ? SOME_BIT_bm : 0) | ..."
  22:dependencies/hal/xmega/usart_driver.c ****  *      Although the use of the ternary operator ( if ? then : else ) is discouraged,
  23:dependencies/hal/xmega/usart_driver.c ****  *      in some occasions the operator makes it possible to write pretty clean and
  24:dependencies/hal/xmega/usart_driver.c ****  *      neat code. In this driver, the construct is used to set or not set a
  25:dependencies/hal/xmega/usart_driver.c ****  *      configuration bit based on a boolean input parameter, such as
  26:dependencies/hal/xmega/usart_driver.c ****  *      the "some_parameter" in the example above.
  27:dependencies/hal/xmega/usart_driver.c ****  *
  28:dependencies/hal/xmega/usart_driver.c ****  * \par Application note:
  29:dependencies/hal/xmega/usart_driver.c ****  *      AVR1307: Using the XMEGA USART
  30:dependencies/hal/xmega/usart_driver.c ****  *
  31:dependencies/hal/xmega/usart_driver.c ****  * \par Documentation
  32:dependencies/hal/xmega/usart_driver.c ****  *      For comprehensive code documentation, supported compilers, compiler
  33:dependencies/hal/xmega/usart_driver.c ****  *      settings and supported devices see readme.html
  34:dependencies/hal/xmega/usart_driver.c ****  *
  35:dependencies/hal/xmega/usart_driver.c ****  * \author
  36:dependencies/hal/xmega/usart_driver.c ****  *      Atmel Corporation: http://www.atmel.com \n
  37:dependencies/hal/xmega/usart_driver.c ****  *      Support email: avr@atmel.com
  38:dependencies/hal/xmega/usart_driver.c ****  *
  39:dependencies/hal/xmega/usart_driver.c ****  * $Revision: 1694 $
  40:dependencies/hal/xmega/usart_driver.c ****  * $Date: 2008-07-29 14:21:58 +0200 (ti, 29 jul 2008) $  \n
  41:dependencies/hal/xmega/usart_driver.c ****  *
  42:dependencies/hal/xmega/usart_driver.c ****  * Copyright (c) 2008, Atmel Corporation All rights reserved.
  43:dependencies/hal/xmega/usart_driver.c ****  *
  44:dependencies/hal/xmega/usart_driver.c ****  * Redistribution and use in source and binary forms, with or without
  45:dependencies/hal/xmega/usart_driver.c ****  * modification, are permitted provided that the following conditions are met:
  46:dependencies/hal/xmega/usart_driver.c ****  *
  47:dependencies/hal/xmega/usart_driver.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  48:dependencies/hal/xmega/usart_driver.c ****  * this list of conditions and the following disclaimer.
  49:dependencies/hal/xmega/usart_driver.c ****  *
  50:dependencies/hal/xmega/usart_driver.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  51:dependencies/hal/xmega/usart_driver.c ****  * this list of conditions and the following disclaimer in the documentation
  52:dependencies/hal/xmega/usart_driver.c ****  * and/or other materials provided with the distribution.
  53:dependencies/hal/xmega/usart_driver.c ****  *
  54:dependencies/hal/xmega/usart_driver.c ****  * 3. The name of ATMEL may not be used to endorse or promote products derived
  55:dependencies/hal/xmega/usart_driver.c ****  * from this software without specific prior written permission.
  56:dependencies/hal/xmega/usart_driver.c ****  *
  57:dependencies/hal/xmega/usart_driver.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  58:dependencies/hal/xmega/usart_driver.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  59:dependencies/hal/xmega/usart_driver.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY AND
  60:dependencies/hal/xmega/usart_driver.c ****  * SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT,
  61:dependencies/hal/xmega/usart_driver.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  62:dependencies/hal/xmega/usart_driver.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  63:dependencies/hal/xmega/usart_driver.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  64:dependencies/hal/xmega/usart_driver.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  65:dependencies/hal/xmega/usart_driver.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  66:dependencies/hal/xmega/usart_driver.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  67:dependencies/hal/xmega/usart_driver.c ****  *****************************************************************************/
  68:dependencies/hal/xmega/usart_driver.c **** #include "usart_driver.h"
  69:dependencies/hal/xmega/usart_driver.c **** 
  70:dependencies/hal/xmega/usart_driver.c **** 
  71:dependencies/hal/xmega/usart_driver.c **** 
  72:dependencies/hal/xmega/usart_driver.c **** /*! \brief Initializes buffer and selects what USART module to use.
  73:dependencies/hal/xmega/usart_driver.c ****  *
  74:dependencies/hal/xmega/usart_driver.c ****  *  Initializes receive and transmit buffer and selects what USART module to use,
  75:dependencies/hal/xmega/usart_driver.c ****  *  and stores the data register empty interrupt level.
  76:dependencies/hal/xmega/usart_driver.c ****  *
  77:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data           The USART_data_t struct instance.
  78:dependencies/hal/xmega/usart_driver.c ****  *  \param usart                The USART module.
  79:dependencies/hal/xmega/usart_driver.c ****  *  \param dreIntLevel          Data register empty interrupt level.
  80:dependencies/hal/xmega/usart_driver.c ****  */
  81:dependencies/hal/xmega/usart_driver.c **** void USART_InterruptDriver_Initialize(USART_data_t * usart_data,
  82:dependencies/hal/xmega/usart_driver.c ****                                       USART_t * usart,
  83:dependencies/hal/xmega/usart_driver.c ****                                       USART_DREINTLVL_t dreIntLevel)
  84:dependencies/hal/xmega/usart_driver.c **** {
  17               		.loc 1 84 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24 0000 FC01      		movw r30,r24
  85:dependencies/hal/xmega/usart_driver.c **** 	usart_data->usart = usart;
  25               		.loc 1 85 0
  26 0002 6083      		st Z,r22
  27 0004 7183      		std Z+1,r23
  86:dependencies/hal/xmega/usart_driver.c **** 	usart_data->dreIntLevel = dreIntLevel;
  28               		.loc 1 86 0
  29 0006 4283      		std Z+2,r20
  87:dependencies/hal/xmega/usart_driver.c **** 
  88:dependencies/hal/xmega/usart_driver.c **** 	usart_data->buffer.RX_Tail = 0;
  30               		.loc 1 88 0
  31 0008 1486      		std Z+12,__zero_reg__
  89:dependencies/hal/xmega/usart_driver.c **** 	usart_data->buffer.RX_Head = 0;
  32               		.loc 1 89 0
  33 000a 1386      		std Z+11,__zero_reg__
  90:dependencies/hal/xmega/usart_driver.c **** 	usart_data->buffer.TX_Tail = 0;
  34               		.loc 1 90 0
  35 000c 1686      		std Z+14,__zero_reg__
  91:dependencies/hal/xmega/usart_driver.c **** 	usart_data->buffer.TX_Head = 0;
  36               		.loc 1 91 0
  37 000e 1586      		std Z+13,__zero_reg__
  38 0010 0895      		ret
  39               		.cfi_endproc
  40               	.LFE11:
  42               	.global	USART_InterruptDriver_DreInterruptLevel_Set
  44               	USART_InterruptDriver_DreInterruptLevel_Set:
  45               	.LFB12:
  92:dependencies/hal/xmega/usart_driver.c **** }
  93:dependencies/hal/xmega/usart_driver.c **** 
  94:dependencies/hal/xmega/usart_driver.c **** 
  95:dependencies/hal/xmega/usart_driver.c **** /*! \brief Set USART DRE interrupt level.
  96:dependencies/hal/xmega/usart_driver.c ****  *
  97:dependencies/hal/xmega/usart_driver.c ****  *  Set the interrupt level on Data Register interrupt.
  98:dependencies/hal/xmega/usart_driver.c ****  *
  99:dependencies/hal/xmega/usart_driver.c ****  *  \note Changing the DRE interrupt level in the interrupt driver while it is
 100:dependencies/hal/xmega/usart_driver.c ****  *        running will not change the DRE interrupt level in the USART before the
 101:dependencies/hal/xmega/usart_driver.c ****  *        DRE interrupt have been disabled and enabled again.
 102:dependencies/hal/xmega/usart_driver.c ****  *
 103:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data         The USART_data_t struct instance
 104:dependencies/hal/xmega/usart_driver.c ****  *  \param dreIntLevel        Interrupt level of the DRE interrupt.
 105:dependencies/hal/xmega/usart_driver.c ****  */
 106:dependencies/hal/xmega/usart_driver.c **** void USART_InterruptDriver_DreInterruptLevel_Set(USART_data_t * usart_data,
 107:dependencies/hal/xmega/usart_driver.c ****                                                  USART_DREINTLVL_t dreIntLevel)
 108:dependencies/hal/xmega/usart_driver.c **** {
  46               		.loc 1 108 0
  47               		.cfi_startproc
  48               	.LVL1:
  49               	/* prologue: function */
  50               	/* frame size = 0 */
  51               	/* stack size = 0 */
  52               	.L__stack_usage = 0
 109:dependencies/hal/xmega/usart_driver.c **** 	usart_data->dreIntLevel = dreIntLevel;
  53               		.loc 1 109 0
  54 0012 FC01      		movw r30,r24
  55 0014 6283      		std Z+2,r22
  56 0016 0895      		ret
  57               		.cfi_endproc
  58               	.LFE12:
  60               	.global	USART_TXBuffer_FreeSpace
  62               	USART_TXBuffer_FreeSpace:
  63               	.LFB13:
 110:dependencies/hal/xmega/usart_driver.c **** }
 111:dependencies/hal/xmega/usart_driver.c **** 
 112:dependencies/hal/xmega/usart_driver.c **** 
 113:dependencies/hal/xmega/usart_driver.c **** /*! \brief Test if there is data in the transmitter software buffer.
 114:dependencies/hal/xmega/usart_driver.c ****  *
 115:dependencies/hal/xmega/usart_driver.c ****  *  This function can be used to test if there is free space in the transmitter
 116:dependencies/hal/xmega/usart_driver.c ****  *  software buffer.
 117:dependencies/hal/xmega/usart_driver.c ****  *
 118:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data The USART_data_t struct instance.
 119:dependencies/hal/xmega/usart_driver.c ****  *
 120:dependencies/hal/xmega/usart_driver.c ****  *  \retval true      There is data in the receive buffer.
 121:dependencies/hal/xmega/usart_driver.c ****  *  \retval false     The receive buffer is empty.
 122:dependencies/hal/xmega/usart_driver.c ****  */
 123:dependencies/hal/xmega/usart_driver.c **** bool USART_TXBuffer_FreeSpace(USART_data_t * usart_data)
 124:dependencies/hal/xmega/usart_driver.c **** {
  64               		.loc 1 124 0
  65               		.cfi_startproc
  66               	.LVL2:
  67               	/* prologue: function */
  68               	/* frame size = 0 */
  69               	/* stack size = 0 */
  70               	.L__stack_usage = 0
  71 0018 FC01      		movw r30,r24
 125:dependencies/hal/xmega/usart_driver.c **** 	/* Make copies to make sure that volatile access is specified. */
 126:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempHead = (usart_data->buffer.TX_Head + 1) & USART_TX_BUFFER_MASK;
  72               		.loc 1 126 0
  73 001a 9585      		ldd r25,Z+13
  74               	.LVL3:
 127:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempTail = usart_data->buffer.TX_Tail;
  75               		.loc 1 127 0
  76 001c 2685      		ldd r18,Z+14
  77               	.LVL4:
 128:dependencies/hal/xmega/usart_driver.c **** 
 129:dependencies/hal/xmega/usart_driver.c **** 	/* There are data left in the buffer unless Head and Tail are equal. */
 130:dependencies/hal/xmega/usart_driver.c **** 	return (tempHead != tempTail);
  78               		.loc 1 130 0
  79 001e 9F5F      		subi r25,lo8(-(1))
  80               	.LVL5:
  81 0020 9370      		andi r25,lo8(3)
  82               	.LVL6:
  83 0022 81E0      		ldi r24,lo8(1)
  84               	.LVL7:
  85 0024 9213      		cpse r25,r18
  86 0026 00C0      		rjmp .L4
  87 0028 80E0      		ldi r24,0
  88               	.L4:
 131:dependencies/hal/xmega/usart_driver.c **** }
  89               		.loc 1 131 0
  90 002a 0895      		ret
  91               		.cfi_endproc
  92               	.LFE13:
  94               	.global	USART_TXBuffer_PutByte
  96               	USART_TXBuffer_PutByte:
  97               	.LFB14:
 132:dependencies/hal/xmega/usart_driver.c **** 
 133:dependencies/hal/xmega/usart_driver.c **** 
 134:dependencies/hal/xmega/usart_driver.c **** 
 135:dependencies/hal/xmega/usart_driver.c **** /*! \brief Put data (5-8 bit character).
 136:dependencies/hal/xmega/usart_driver.c ****  *
 137:dependencies/hal/xmega/usart_driver.c ****  *  Stores data byte in TX software buffer and enables DRE interrupt if there
 138:dependencies/hal/xmega/usart_driver.c ****  *  is free space in the TX software buffer.
 139:dependencies/hal/xmega/usart_driver.c ****  *
 140:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data The USART_data_t struct instance.
 141:dependencies/hal/xmega/usart_driver.c ****  *  \param data       The data to send.
 142:dependencies/hal/xmega/usart_driver.c ****  */
 143:dependencies/hal/xmega/usart_driver.c **** bool USART_TXBuffer_PutByte(USART_data_t * usart_data, uint8_t data)
 144:dependencies/hal/xmega/usart_driver.c **** {
  98               		.loc 1 144 0
  99               		.cfi_startproc
 100               	.LVL8:
 101 002c 1F93      		push r17
 102               	.LCFI0:
 103               		.cfi_def_cfa_offset 4
 104               		.cfi_offset 17, -3
 105 002e CF93      		push r28
 106               	.LCFI1:
 107               		.cfi_def_cfa_offset 5
 108               		.cfi_offset 28, -4
 109 0030 DF93      		push r29
 110               	.LCFI2:
 111               		.cfi_def_cfa_offset 6
 112               		.cfi_offset 29, -5
 113               	/* prologue: function */
 114               	/* frame size = 0 */
 115               	/* stack size = 3 */
 116               	.L__stack_usage = 3
 117 0032 EC01      		movw r28,r24
 118 0034 162F      		mov r17,r22
 119               	.LVL9:
 145:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempCTRLA;
 146:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempTX_Head;
 147:dependencies/hal/xmega/usart_driver.c **** 	bool TXBuffer_FreeSpace;
 148:dependencies/hal/xmega/usart_driver.c **** 	USART_Buffer_t * TXbufPtr;
 149:dependencies/hal/xmega/usart_driver.c **** 
 150:dependencies/hal/xmega/usart_driver.c **** 	TXbufPtr = &usart_data->buffer;
 151:dependencies/hal/xmega/usart_driver.c **** 	TXBuffer_FreeSpace = USART_TXBuffer_FreeSpace(usart_data);
 120               		.loc 1 151 0
 121 0036 0E94 0000 		call USART_TXBuffer_FreeSpace
 122               	.LVL10:
 152:dependencies/hal/xmega/usart_driver.c **** 
 153:dependencies/hal/xmega/usart_driver.c **** 
 154:dependencies/hal/xmega/usart_driver.c **** 	if(TXBuffer_FreeSpace)
 123               		.loc 1 154 0
 124 003a 8823      		tst r24
 125 003c 01F0      		breq .L7
 155:dependencies/hal/xmega/usart_driver.c **** 	{
 156:dependencies/hal/xmega/usart_driver.c **** 	  	tempTX_Head = TXbufPtr->TX_Head;
 126               		.loc 1 156 0
 127 003e 9D85      		ldd r25,Y+13
 128               	.LVL11:
 157:dependencies/hal/xmega/usart_driver.c **** 	  	TXbufPtr->TX[tempTX_Head]= data;
 129               		.loc 1 157 0
 130 0040 FE01      		movw r30,r28
 131 0042 E90F      		add r30,r25
 132 0044 F11D      		adc r31,__zero_reg__
 133 0046 1783      		std Z+7,r17
 158:dependencies/hal/xmega/usart_driver.c **** 		/* Advance buffer head. */
 159:dependencies/hal/xmega/usart_driver.c **** 		TXbufPtr->TX_Head = (tempTX_Head + 1) & USART_TX_BUFFER_MASK;
 134               		.loc 1 159 0
 135 0048 9F5F      		subi r25,lo8(-(1))
 136               	.LVL12:
 137 004a 9370      		andi r25,lo8(3)
 138               	.LVL13:
 139 004c 9D87      		std Y+13,r25
 160:dependencies/hal/xmega/usart_driver.c **** 
 161:dependencies/hal/xmega/usart_driver.c **** 		/* Enable DRE interrupt. */
 162:dependencies/hal/xmega/usart_driver.c **** 		tempCTRLA = usart_data->usart->CTRLA;
 140               		.loc 1 162 0
 141 004e E881      		ld r30,Y
 142 0050 F981      		ldd r31,Y+1
 143 0052 9381      		ldd r25,Z+3
 144               	.LVL14:
 163:dependencies/hal/xmega/usart_driver.c **** 		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | usart_data->dreIntLevel;
 145               		.loc 1 163 0
 146 0054 9C7F      		andi r25,lo8(-4)
 147               	.LVL15:
 148 0056 2A81      		ldd r18,Y+2
 149 0058 922B      		or r25,r18
 150               	.LVL16:
 164:dependencies/hal/xmega/usart_driver.c **** 		usart_data->usart->CTRLA = tempCTRLA;
 151               		.loc 1 164 0
 152 005a 9383      		std Z+3,r25
 153               	.LVL17:
 154               	.L7:
 155               	/* epilogue start */
 165:dependencies/hal/xmega/usart_driver.c **** 	}
 166:dependencies/hal/xmega/usart_driver.c **** 	return TXBuffer_FreeSpace;
 167:dependencies/hal/xmega/usart_driver.c **** }
 156               		.loc 1 167 0
 157 005c DF91      		pop r29
 158 005e CF91      		pop r28
 159               	.LVL18:
 160 0060 1F91      		pop r17
 161               	.LVL19:
 162 0062 0895      		ret
 163               		.cfi_endproc
 164               	.LFE14:
 166               	.global	USART_RXBufferData_Available
 168               	USART_RXBufferData_Available:
 169               	.LFB15:
 168:dependencies/hal/xmega/usart_driver.c **** 
 169:dependencies/hal/xmega/usart_driver.c **** 
 170:dependencies/hal/xmega/usart_driver.c **** 
 171:dependencies/hal/xmega/usart_driver.c **** /*! \brief Test if there is data in the receive software buffer.
 172:dependencies/hal/xmega/usart_driver.c ****  *
 173:dependencies/hal/xmega/usart_driver.c ****  *  This function can be used to test if there is data in the receive software
 174:dependencies/hal/xmega/usart_driver.c ****  *  buffer.
 175:dependencies/hal/xmega/usart_driver.c ****  *
 176:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data         The USART_data_t struct instance
 177:dependencies/hal/xmega/usart_driver.c ****  *
 178:dependencies/hal/xmega/usart_driver.c ****  *  \retval true      There is data in the receive buffer.
 179:dependencies/hal/xmega/usart_driver.c ****  *  \retval false     The receive buffer is empty.
 180:dependencies/hal/xmega/usart_driver.c ****  */
 181:dependencies/hal/xmega/usart_driver.c **** bool USART_RXBufferData_Available(USART_data_t * usart_data)
 182:dependencies/hal/xmega/usart_driver.c **** {
 170               		.loc 1 182 0
 171               		.cfi_startproc
 172               	.LVL20:
 173               	/* prologue: function */
 174               	/* frame size = 0 */
 175               	/* stack size = 0 */
 176               	.L__stack_usage = 0
 183:dependencies/hal/xmega/usart_driver.c **** 	/* Make copies to make sure that volatile access is specified. */
 184:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempHead = usart_data->buffer.RX_Head;
 177               		.loc 1 184 0
 178 0064 FC01      		movw r30,r24
 179 0066 2385      		ldd r18,Z+11
 180               	.LVL21:
 185:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempTail = usart_data->buffer.RX_Tail;
 181               		.loc 1 185 0
 182 0068 9485      		ldd r25,Z+12
 183               	.LVL22:
 186:dependencies/hal/xmega/usart_driver.c **** 
 187:dependencies/hal/xmega/usart_driver.c **** 	/* There are data left in the buffer unless Head and Tail are equal. */
 188:dependencies/hal/xmega/usart_driver.c **** 	return (tempHead != tempTail);
 184               		.loc 1 188 0
 185 006a 81E0      		ldi r24,lo8(1)
 186               	.LVL23:
 187 006c 2913      		cpse r18,r25
 188 006e 00C0      		rjmp .L12
 189 0070 80E0      		ldi r24,0
 190               	.L12:
 189:dependencies/hal/xmega/usart_driver.c **** }
 191               		.loc 1 189 0
 192 0072 0895      		ret
 193               		.cfi_endproc
 194               	.LFE15:
 196               	.global	USART_RXBuffer_GetByte
 198               	USART_RXBuffer_GetByte:
 199               	.LFB16:
 190:dependencies/hal/xmega/usart_driver.c **** 
 191:dependencies/hal/xmega/usart_driver.c **** 
 192:dependencies/hal/xmega/usart_driver.c **** 
 193:dependencies/hal/xmega/usart_driver.c **** /*! \brief Get received data (5-8 bit character).
 194:dependencies/hal/xmega/usart_driver.c ****  *
 195:dependencies/hal/xmega/usart_driver.c ****  *  The function USART_RXBufferData_Available should be used before this
 196:dependencies/hal/xmega/usart_driver.c ****  *  function is used to ensure that data is available.
 197:dependencies/hal/xmega/usart_driver.c ****  *
 198:dependencies/hal/xmega/usart_driver.c ****  *  Returns data from RX software buffer.
 199:dependencies/hal/xmega/usart_driver.c ****  *
 200:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data       The USART_data_t struct instance.
 201:dependencies/hal/xmega/usart_driver.c ****  *
 202:dependencies/hal/xmega/usart_driver.c ****  *  \return         Received data.
 203:dependencies/hal/xmega/usart_driver.c ****  */
 204:dependencies/hal/xmega/usart_driver.c **** uint8_t USART_RXBuffer_GetByte(USART_data_t * usart_data)
 205:dependencies/hal/xmega/usart_driver.c **** {
 200               		.loc 1 205 0
 201               		.cfi_startproc
 202               	.LVL24:
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 205               	/* stack size = 0 */
 206               	.L__stack_usage = 0
 207 0074 FC01      		movw r30,r24
 208               	.LVL25:
 206:dependencies/hal/xmega/usart_driver.c **** 	USART_Buffer_t * bufPtr;
 207:dependencies/hal/xmega/usart_driver.c **** 	uint8_t ans;
 208:dependencies/hal/xmega/usart_driver.c **** 
 209:dependencies/hal/xmega/usart_driver.c **** 	bufPtr = &usart_data->buffer;
 210:dependencies/hal/xmega/usart_driver.c **** 	ans = (bufPtr->RX[bufPtr->RX_Tail]);
 209               		.loc 1 210 0
 210 0076 8485      		ldd r24,Z+12
 211               	.LVL26:
 212 0078 DF01      		movw r26,r30
 213 007a A80F      		add r26,r24
 214 007c B11D      		adc r27,__zero_reg__
 215 007e 1396      		adiw r26,3
 216 0080 8C91      		ld r24,X
 217               	.LVL27:
 211:dependencies/hal/xmega/usart_driver.c **** 
 212:dependencies/hal/xmega/usart_driver.c **** 	/* Advance buffer tail. */
 213:dependencies/hal/xmega/usart_driver.c **** 	bufPtr->RX_Tail = (bufPtr->RX_Tail + 1) & USART_RX_BUFFER_MASK;
 218               		.loc 1 213 0
 219 0082 9485      		ldd r25,Z+12
 220 0084 9F5F      		subi r25,lo8(-(1))
 221 0086 9370      		andi r25,lo8(3)
 222 0088 9487      		std Z+12,r25
 214:dependencies/hal/xmega/usart_driver.c **** 
 215:dependencies/hal/xmega/usart_driver.c **** 	return ans;
 216:dependencies/hal/xmega/usart_driver.c **** }
 223               		.loc 1 216 0
 224 008a 0895      		ret
 225               		.cfi_endproc
 226               	.LFE16:
 228               	.global	USART_RXComplete
 230               	USART_RXComplete:
 231               	.LFB17:
 217:dependencies/hal/xmega/usart_driver.c **** 
 218:dependencies/hal/xmega/usart_driver.c **** 
 219:dependencies/hal/xmega/usart_driver.c **** 
 220:dependencies/hal/xmega/usart_driver.c **** /*! \brief RX Complete Interrupt Service Routine.
 221:dependencies/hal/xmega/usart_driver.c ****  *
 222:dependencies/hal/xmega/usart_driver.c ****  *  RX Complete Interrupt Service Routine.
 223:dependencies/hal/xmega/usart_driver.c ****  *  Stores received data in RX software buffer.
 224:dependencies/hal/xmega/usart_driver.c ****  *
 225:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data      The USART_data_t struct instance.
 226:dependencies/hal/xmega/usart_driver.c ****  */
 227:dependencies/hal/xmega/usart_driver.c **** bool USART_RXComplete(USART_data_t * usart_data)
 228:dependencies/hal/xmega/usart_driver.c **** {
 232               		.loc 1 228 0
 233               		.cfi_startproc
 234               	.LVL28:
 235               	/* prologue: function */
 236               	/* frame size = 0 */
 237               	/* stack size = 0 */
 238               	.L__stack_usage = 0
 239 008c FC01      		movw r30,r24
 240               	.LVL29:
 229:dependencies/hal/xmega/usart_driver.c **** 	USART_Buffer_t * bufPtr;
 230:dependencies/hal/xmega/usart_driver.c **** 	bool ans;
 231:dependencies/hal/xmega/usart_driver.c **** 
 232:dependencies/hal/xmega/usart_driver.c **** 	bufPtr = &usart_data->buffer;
 233:dependencies/hal/xmega/usart_driver.c **** 	/* Advance buffer head. */
 234:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempRX_Head = (bufPtr->RX_Head + 1) & USART_RX_BUFFER_MASK;
 241               		.loc 1 234 0
 242 008e 8385      		ldd r24,Z+11
 243               	.LVL30:
 244 0090 8F5F      		subi r24,lo8(-(1))
 245 0092 8370      		andi r24,lo8(3)
 246               	.LVL31:
 235:dependencies/hal/xmega/usart_driver.c **** 
 236:dependencies/hal/xmega/usart_driver.c **** 	/* Check for overflow. */
 237:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempRX_Tail = bufPtr->RX_Tail;
 247               		.loc 1 237 0
 248 0094 2485      		ldd r18,Z+12
 249               	.LVL32:
 238:dependencies/hal/xmega/usart_driver.c **** 	uint8_t data = usart_data->usart->DATA;
 250               		.loc 1 238 0
 251 0096 A081      		ld r26,Z
 252 0098 B181      		ldd r27,Z+1
 253 009a 9C91      		ld r25,X
 254               	.LVL33:
 239:dependencies/hal/xmega/usart_driver.c **** 
 240:dependencies/hal/xmega/usart_driver.c **** 	if (tempRX_Head == tempRX_Tail) {
 255               		.loc 1 240 0
 256 009c 8217      		cp r24,r18
 257 009e 01F0      		breq .L16
 258               	.LVL34:
 241:dependencies/hal/xmega/usart_driver.c **** 	  	ans = false;
 242:dependencies/hal/xmega/usart_driver.c **** 	}else{
 243:dependencies/hal/xmega/usart_driver.c **** 		ans = true;
 244:dependencies/hal/xmega/usart_driver.c **** 		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
 259               		.loc 1 244 0
 260 00a0 2385      		ldd r18,Z+11
 261               	.LVL35:
 262 00a2 DF01      		movw r26,r30
 263 00a4 A20F      		add r26,r18
 264 00a6 B11D      		adc r27,__zero_reg__
 265 00a8 1396      		adiw r26,3
 266 00aa 9C93      		st X,r25
 245:dependencies/hal/xmega/usart_driver.c **** 		usart_data->buffer.RX_Head = tempRX_Head;
 267               		.loc 1 245 0
 268 00ac 8387      		std Z+11,r24
 243:dependencies/hal/xmega/usart_driver.c **** 		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
 269               		.loc 1 243 0
 270 00ae 81E0      		ldi r24,lo8(1)
 271               	.LVL36:
 272 00b0 0895      		ret
 273               	.LVL37:
 274               	.L16:
 241:dependencies/hal/xmega/usart_driver.c **** 	  	ans = false;
 275               		.loc 1 241 0
 276 00b2 80E0      		ldi r24,0
 277               	.LVL38:
 246:dependencies/hal/xmega/usart_driver.c **** 	}
 247:dependencies/hal/xmega/usart_driver.c **** 	return ans;
 248:dependencies/hal/xmega/usart_driver.c **** }
 278               		.loc 1 248 0
 279 00b4 0895      		ret
 280               		.cfi_endproc
 281               	.LFE17:
 283               	.global	USART_DataRegEmpty
 285               	USART_DataRegEmpty:
 286               	.LFB18:
 249:dependencies/hal/xmega/usart_driver.c **** 
 250:dependencies/hal/xmega/usart_driver.c **** 
 251:dependencies/hal/xmega/usart_driver.c **** 
 252:dependencies/hal/xmega/usart_driver.c **** /*! \brief Data Register Empty Interrupt Service Routine.
 253:dependencies/hal/xmega/usart_driver.c ****  *
 254:dependencies/hal/xmega/usart_driver.c ****  *  Data Register Empty Interrupt Service Routine.
 255:dependencies/hal/xmega/usart_driver.c ****  *  Transmits one byte from TX software buffer. Disables DRE interrupt if buffer
 256:dependencies/hal/xmega/usart_driver.c ****  *  is empty. Argument is pointer to USART (USART_data_t).
 257:dependencies/hal/xmega/usart_driver.c ****  *
 258:dependencies/hal/xmega/usart_driver.c ****  *  \param usart_data      The USART_data_t struct instance.
 259:dependencies/hal/xmega/usart_driver.c ****  */
 260:dependencies/hal/xmega/usart_driver.c **** void USART_DataRegEmpty(USART_data_t * usart_data)
 261:dependencies/hal/xmega/usart_driver.c **** {
 287               		.loc 1 261 0
 288               		.cfi_startproc
 289               	.LVL39:
 290 00b6 CF93      		push r28
 291               	.LCFI3:
 292               		.cfi_def_cfa_offset 4
 293               		.cfi_offset 28, -3
 294 00b8 DF93      		push r29
 295               	.LCFI4:
 296               		.cfi_def_cfa_offset 5
 297               		.cfi_offset 29, -4
 298               	/* prologue: function */
 299               	/* frame size = 0 */
 300               	/* stack size = 2 */
 301               	.L__stack_usage = 2
 302 00ba FC01      		movw r30,r24
 303               	.LVL40:
 262:dependencies/hal/xmega/usart_driver.c **** 	USART_Buffer_t * bufPtr;
 263:dependencies/hal/xmega/usart_driver.c **** 	bufPtr = &usart_data->buffer;
 264:dependencies/hal/xmega/usart_driver.c **** 
 265:dependencies/hal/xmega/usart_driver.c **** 	/* Check if all data is transmitted. */
 266:dependencies/hal/xmega/usart_driver.c **** 	uint8_t tempTX_Tail = usart_data->buffer.TX_Tail;
 304               		.loc 1 266 0
 305 00bc 9685      		ldd r25,Z+14
 306               	.LVL41:
 267:dependencies/hal/xmega/usart_driver.c **** 	if (bufPtr->TX_Head == tempTX_Tail){
 307               		.loc 1 267 0
 308 00be 8585      		ldd r24,Z+13
 309               	.LVL42:
 310 00c0 A081      		ld r26,Z
 311 00c2 B181      		ldd r27,Z+1
 312 00c4 9813      		cpse r25,r24
 313 00c6 00C0      		rjmp .L18
 314               	.LBB2:
 268:dependencies/hal/xmega/usart_driver.c **** 	    /* Disable DRE interrupts. */
 269:dependencies/hal/xmega/usart_driver.c **** 		uint8_t tempCTRLA = usart_data->usart->CTRLA;
 315               		.loc 1 269 0
 316 00c8 1396      		adiw r26,3
 317 00ca 8C91      		ld r24,X
 318 00cc 1397      		sbiw r26,3
 319               	.LVL43:
 270:dependencies/hal/xmega/usart_driver.c **** 		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | USART_DREINTLVL_OFF_gc;
 320               		.loc 1 270 0
 321 00ce 8C7F      		andi r24,lo8(-4)
 322               	.LVL44:
 271:dependencies/hal/xmega/usart_driver.c **** 		usart_data->usart->CTRLA = tempCTRLA;
 323               		.loc 1 271 0
 324 00d0 1396      		adiw r26,3
 325 00d2 8C93      		st X,r24
 326               	.LBE2:
 327 00d4 00C0      		rjmp .L17
 328               	.LVL45:
 329               	.L18:
 330               	.LBB3:
 272:dependencies/hal/xmega/usart_driver.c **** 
 273:dependencies/hal/xmega/usart_driver.c **** 	}else{
 274:dependencies/hal/xmega/usart_driver.c **** 		/* Start transmitting. */
 275:dependencies/hal/xmega/usart_driver.c **** 		uint8_t data = bufPtr->TX[usart_data->buffer.TX_Tail];
 331               		.loc 1 275 0
 332 00d6 8685      		ldd r24,Z+14
 333 00d8 EF01      		movw r28,r30
 334 00da C80F      		add r28,r24
 335 00dc D11D      		adc r29,__zero_reg__
 336 00de 8F81      		ldd r24,Y+7
 337               	.LVL46:
 276:dependencies/hal/xmega/usart_driver.c **** 		usart_data->usart->DATA = data;
 338               		.loc 1 276 0
 339 00e0 8C93      		st X,r24
 277:dependencies/hal/xmega/usart_driver.c **** 
 278:dependencies/hal/xmega/usart_driver.c **** 		/* Advance buffer tail. */
 279:dependencies/hal/xmega/usart_driver.c **** 		bufPtr->TX_Tail = (bufPtr->TX_Tail + 1) & USART_TX_BUFFER_MASK;
 340               		.loc 1 279 0
 341 00e2 8685      		ldd r24,Z+14
 342               	.LVL47:
 343 00e4 8F5F      		subi r24,lo8(-(1))
 344 00e6 8370      		andi r24,lo8(3)
 345 00e8 8687      		std Z+14,r24
 346               	.LVL48:
 347               	.L17:
 348               	/* epilogue start */
 349               	.LBE3:
 280:dependencies/hal/xmega/usart_driver.c **** 	}
 281:dependencies/hal/xmega/usart_driver.c **** }
 350               		.loc 1 281 0
 351 00ea DF91      		pop r29
 352 00ec CF91      		pop r28
 353 00ee 0895      		ret
 354               		.cfi_endproc
 355               	.LFE18:
 357               	.global	USART_NineBits_PutChar
 359               	USART_NineBits_PutChar:
 360               	.LFB19:
 282:dependencies/hal/xmega/usart_driver.c **** 
 283:dependencies/hal/xmega/usart_driver.c **** 
 284:dependencies/hal/xmega/usart_driver.c **** /*! \brief Put data (9 bit character).
 285:dependencies/hal/xmega/usart_driver.c ****  *
 286:dependencies/hal/xmega/usart_driver.c ****  *  Use the function USART_IsTXDataRegisterEmpty before using this function to
 287:dependencies/hal/xmega/usart_driver.c ****  *  put 9 bit character to the TX register.
 288:dependencies/hal/xmega/usart_driver.c ****  *
 289:dependencies/hal/xmega/usart_driver.c ****  *  \param usart      The USART module.
 290:dependencies/hal/xmega/usart_driver.c ****  *  \param data       The data to send.
 291:dependencies/hal/xmega/usart_driver.c ****  */
 292:dependencies/hal/xmega/usart_driver.c **** void USART_NineBits_PutChar(USART_t * usart, uint16_t data)
 293:dependencies/hal/xmega/usart_driver.c **** {
 361               		.loc 1 293 0
 362               		.cfi_startproc
 363               	.LVL49:
 364               	/* prologue: function */
 365               	/* frame size = 0 */
 366               	/* stack size = 0 */
 367               	.L__stack_usage = 0
 368 00f0 FC01      		movw r30,r24
 294:dependencies/hal/xmega/usart_driver.c **** 	if(data & 0x0100) {
 295:dependencies/hal/xmega/usart_driver.c **** 		usart->CTRLB |= USART_TXB8_bm;
 369               		.loc 1 295 0
 370 00f2 8481      		ldd r24,Z+4
 371               	.LVL50:
 294:dependencies/hal/xmega/usart_driver.c **** 	if(data & 0x0100) {
 372               		.loc 1 294 0
 373 00f4 70FF      		sbrs r23,0
 374 00f6 00C0      		rjmp .L21
 375               		.loc 1 295 0
 376 00f8 8160      		ori r24,lo8(1)
 377 00fa 00C0      		rjmp .L23
 378               	.L21:
 296:dependencies/hal/xmega/usart_driver.c **** 	}else {
 297:dependencies/hal/xmega/usart_driver.c **** 		usart->CTRLB &= ~USART_TXB8_bm;
 379               		.loc 1 297 0
 380 00fc 8E7F      		andi r24,lo8(-2)
 381               	.L23:
 382 00fe 8483      		std Z+4,r24
 298:dependencies/hal/xmega/usart_driver.c **** 	}
 299:dependencies/hal/xmega/usart_driver.c **** 
 300:dependencies/hal/xmega/usart_driver.c **** 	usart->DATA = (data & 0x00FF);
 383               		.loc 1 300 0
 384 0100 6083      		st Z,r22
 385 0102 0895      		ret
 386               		.cfi_endproc
 387               	.LFE19:
 389               	.global	USART_NineBits_GetChar
 391               	USART_NineBits_GetChar:
 392               	.LFB20:
 301:dependencies/hal/xmega/usart_driver.c **** }
 302:dependencies/hal/xmega/usart_driver.c **** 
 303:dependencies/hal/xmega/usart_driver.c **** 
 304:dependencies/hal/xmega/usart_driver.c **** /*! \brief Get received data (9 bit character).
 305:dependencies/hal/xmega/usart_driver.c ****  *
 306:dependencies/hal/xmega/usart_driver.c ****  *  This function reads out the received 9 bit character (uint16_t).
 307:dependencies/hal/xmega/usart_driver.c ****  *  Use the function USART_IsRXComplete to check if anything is received.
 308:dependencies/hal/xmega/usart_driver.c ****  *
 309:dependencies/hal/xmega/usart_driver.c ****  *  \param usart      The USART module.
 310:dependencies/hal/xmega/usart_driver.c ****  *
 311:dependencies/hal/xmega/usart_driver.c ****  *  \retval           Received data.
 312:dependencies/hal/xmega/usart_driver.c ****  */
 313:dependencies/hal/xmega/usart_driver.c **** uint16_t USART_NineBits_GetChar(USART_t * usart)
 314:dependencies/hal/xmega/usart_driver.c **** {
 393               		.loc 1 314 0
 394               		.cfi_startproc
 395               	.LVL51:
 396               	/* prologue: function */
 397               	/* frame size = 0 */
 398               	/* stack size = 0 */
 399               	.L__stack_usage = 0
 400 0104 FC01      		movw r30,r24
 315:dependencies/hal/xmega/usart_driver.c **** 	if(usart->CTRLB & USART_RXB8_bm) {
 401               		.loc 1 315 0
 402 0106 8481      		ldd r24,Z+4
 403               	.LVL52:
 404 0108 80FF      		sbrs r24,0
 405 010a 00C0      		rjmp .L25
 316:dependencies/hal/xmega/usart_driver.c **** 		return(0x0100 | usart->DATA);
 406               		.loc 1 316 0
 407 010c 8081      		ld r24,Z
 408 010e 90E0      		ldi r25,0
 409 0110 9160      		ori r25,1
 410 0112 0895      		ret
 411               	.L25:
 317:dependencies/hal/xmega/usart_driver.c **** 	}else {
 318:dependencies/hal/xmega/usart_driver.c **** 		return(usart->DATA);
 412               		.loc 1 318 0
 413 0114 8081      		ld r24,Z
 414 0116 90E0      		ldi r25,0
 319:dependencies/hal/xmega/usart_driver.c **** 	}
 320:dependencies/hal/xmega/usart_driver.c **** }
 415               		.loc 1 320 0
 416 0118 0895      		ret
 417               		.cfi_endproc
 418               	.LFE20:
 420               	.Letext0:
 421               		.file 2 "/usr/lib/avr/include/stdint.h"
 422               		.file 3 "/usr/lib/avr/include/avr/iox128d3.h"
 423               		.file 4 "dependencies/hal/xmega/usart_driver.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart_driver.c
     /tmp/ccdeIZrA.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccdeIZrA.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccdeIZrA.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccdeIZrA.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccdeIZrA.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccdeIZrA.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccdeIZrA.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccdeIZrA.s:14     .text:0000000000000000 USART_InterruptDriver_Initialize
     /tmp/ccdeIZrA.s:44     .text:0000000000000012 USART_InterruptDriver_DreInterruptLevel_Set
     /tmp/ccdeIZrA.s:62     .text:0000000000000018 USART_TXBuffer_FreeSpace
     /tmp/ccdeIZrA.s:96     .text:000000000000002c USART_TXBuffer_PutByte
     /tmp/ccdeIZrA.s:168    .text:0000000000000064 USART_RXBufferData_Available
     /tmp/ccdeIZrA.s:198    .text:0000000000000074 USART_RXBuffer_GetByte
     /tmp/ccdeIZrA.s:230    .text:000000000000008c USART_RXComplete
     /tmp/ccdeIZrA.s:285    .text:00000000000000b6 USART_DataRegEmpty
     /tmp/ccdeIZrA.s:359    .text:00000000000000f0 USART_NineBits_PutChar
     /tmp/ccdeIZrA.s:391    .text:0000000000000104 USART_NineBits_GetChar

NO UNDEFINED SYMBOLS
