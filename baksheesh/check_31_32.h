int check_32(uint8_t *diff){
    uint64_t diff1 = 0x0000000000000000UL;
    uint64_t diff2 = 0x0000000000000000UL;
    for(int i=0; i<16; i++){
        diff1 = (diff1 << 4) | diff[15 - i];
        diff2 = (diff2 << 4) | diff[16 + 15 - i];
    }

    if ((((diff2|0x0808080804040404) == 0x0808080804040404) && ((diff1|0x0202020201010101) == 0x0202020201010101)) ||
        (((diff2|0x090909090c0c0c0c) == 0x090909090c0c0c0c) && ((diff1|0x0606060603030303) == 0x0606060603030303)) ||
        (((diff2|0x0101010108080808) == 0x0101010108080808) && ((diff1|0x0404040402020202) == 0x0404040402020202)) ||
        (((diff2|0x0303030309090909) == 0x0303030309090909) && ((diff1|0x0c0c0c0c06060606) == 0x0c0c0c0c06060606)) ||

        (((diff2|0x0202020201010101) == 0x0202020201010101) && ((diff1|0x0808080804040404) == 0x0808080804040404)) ||
        (((diff2|0x0606060603030303) == 0x0606060603030303) && ((diff1|0x090909090c0c0c0c) == 0x090909090c0c0c0c)) ||
        (((diff2|0x0404040402020202) == 0x0404040402020202) && ((diff1|0x0101010108080808) == 0x0101010108080808)) ||


        (((diff2|0x8080808040404040) == 0x8080808040404040) && ((diff1|0x2020202010101010) == 0x2020202010101010)) ||
        (((diff2|0x90909090c0c0c0c0) == 0x90909090c0c0c0c0) && ((diff1|0x6060606030303030) == 0x6060606030303030)) ||
        (((diff2|0x1010101080808080) == 0x1010101080808080) && ((diff1|0x4040404020202020) == 0x4040404020202020)) ||
        (((diff2|0x3030303090909090) == 0x3030303090909090) && ((diff1|0xc0c0c0c060606060) == 0xc0c0c0c060606060)) ||

        (((diff2|0x2020202010101010) == 0x2020202010101010) && ((diff1|0x8080808040404040) == 0x8080808040404040)) ||
        (((diff2|0x6060606030303030) == 0x6060606030303030) && ((diff1|0x90909090c0c0c0c0) == 0x90909090c0c0c0c0)) ||
        (((diff2|0x4040404020202020) == 0x4040404020202020) && ((diff1|0x1010101080808080) == 0x1010101080808080))){
            return 1;
    }
    return 0;
}
int check_31(uint8_t *diff){
    uint64_t diff1 = 0x0000000000000000UL;
    uint64_t diff2 = 0x0000000000000000UL;
    for(int i=0; i<16; i++){
        diff1 = (diff1 << 4) | diff[15 - i];
        diff2 = (diff2 << 4) | diff[16 + 15 - i];
    }
    if ((((diff2|0x0000000b0000000d) == 0x0000000b0000000d) && ((diff1|0x0000000e00000007) == 0x0000000e00000007)) ||
        (((diff2|0x000000070000000b) == 0x000000070000000b) && ((diff1|0x0000000d0000000e) == 0x0000000d0000000e)) ||
        (((diff2|0x0000008600000043) == 0x0000008600000043) && ((diff1|0x000000290000001c) == 0x000000290000001c)) ||
        (((diff2|0x00000094000000c2) == 0x00000094000000c2) && ((diff1|0x0000006100000038) == 0x0000006100000038)) ||

        (((diff2|0x000000b0000000d0) == 0x000000b0000000d0) && ((diff1|0x000000e000000070) == 0x000000e000000070)) ||
        (((diff2|0x00000070000000b0) == 0x00000070000000b0) && ((diff1|0x000000d0000000e0) == 0x000000d0000000e0)) ||
        (((diff2|0x0000086000000430) == 0x0000086000000430) && ((diff1|0x00000290000001c0) == 0x00000290000001c0)) ||
        (((diff2|0x0000094000000c20) == 0x0000094000000c20) && ((diff1|0x0000061000000380) == 0x0000061000000380)) ||

        (((diff2|0x00000b0000000d00) == 0x00000b0000000d00) && ((diff1|0x00000e0000000700) == 0x00000e0000000700)) ||
        (((diff2|0x0000070000000b00) == 0x0000070000000b00) && ((diff1|0x00000d0000000e00) == 0x00000d0000000e00)) ||
        (((diff2|0x0000860000004300) == 0x0000860000004300) && ((diff1|0x0000290000001c00) == 0x0000290000001c00)) ||
        (((diff2|0x000094000000c200) == 0x000094000000c200) && ((diff1|0x0000610000003800) == 0x0000610000003800)) ||

        (((diff2|0x0000b0000000d000) == 0x0000b0000000d000) && ((diff1|0x0000e00000007000) == 0x0000e00000007000)) ||
        (((diff2|0x000070000000b000) == 0x000070000000b000) && ((diff1|0x0000d0000000e000) == 0x0000d0000000e000)) ||


        /* for giving the byte faults at left 64 bits in the fourth last round */
        (((diff2|0x000b0000000d0000) == 0x000b0000000d0000) && ((diff1|0x000e000000070000) == 0x000e000000070000)) ||
        (((diff2|0x00070000000b0000) == 0x00070000000b0000) && ((diff1|0x000d0000000e0000) == 0x000d0000000e0000)) ||
        (((diff2|0x0086000000430000) == 0x0086000000430000) && ((diff1|0x00290000001c0000) == 0x00290000001c0000)) ||
        (((diff2|0x0094000000c20000) == 0x0094000000c20000) && ((diff1|0x0061000000380000) == 0x0061000000380000)) ||

        (((diff2|0x00b0000000d00000) == 0x00b0000000d00000) && ((diff1|0x00e0000000700000) == 0x00e0000000700000)) ||
        (((diff2|0x0070000000b00000) == 0x0070000000b00000) && ((diff1|0x00d0000000e00000) == 0x00d0000000e00000)) ||
        (((diff2|0x0860000004300000) == 0x0860000004300000) && ((diff1|0x0290000001c00000) == 0x0290000001c00000)) ||
        (((diff2|0x094000000c200000) == 0x094000000c200000) && ((diff1|0x0610000003800000) == 0x0610000003800000)) ||

        (((diff2|0x0b0000000d000000 ) == 0x0b0000000d000000) && ((diff1|0x0e00000007000000) == 0x0e00000007000000)) ||
        (((diff2|0x070000000b000000 ) == 0x070000000b000000) && ((diff1|0x0d0000000e000000) == 0x0d0000000e000000)) ||
        (((diff2|0x8600000043000000 ) == 0x8600000043000000) && ((diff1|0x290000001c000000) == 0x290000001c000000)) ||
        (((diff2|0x94000000c2000000 ) == 0x94000000c2000000) && ((diff1|0x6100000038000000) == 0x6100000038000000)) ||

        (((diff2|0xb0000000d0000000 ) == 0xb0000000d0000000) && ((diff1|0xe000000070000000) == 0xe000000070000000)) ||
        (((diff2|0x70000000b0000000 ) == 0x70000000b0000000) && ((diff1|0xd0000000e0000000) == 0xd0000000e0000000))){
            return 1;
    }
    return 0;
}
